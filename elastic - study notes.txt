
# works
# document has "status" : "Operational"
# elastic stores term "status" : "operational"
# term query looks for "status" : "operational"

GET /flies/fly/_search
{
  "query" : {
    "term" : { "status" : "operational" }
  }
}

# does not work
# document has "status" : "Operational"
# elastic stores term "status" : "operational"
# term query looks for "status" : "Operational"
# it does not exist

GET /flies/fly/_search
{
  "query" : {
    "term" : { "status" : "Operational" }
  }
}

----------------------------------

# works
# document has "status" : "Operational"
# elastic stores field "status.keyword" : "Operational"
# term query looks for "status.keyword" : "Operational"

GET /flies/fly/_search
{
  "query" : {
    "term" : { "status.keyword" : "Operational" }
  }
}

# does not work
# document has "status" : "Operational"
# elastic stores field "status.keyword" : "Operational"
# term query looks for "status.keyword" : "operational"
# it does not exist

GET /flies/fly/_search
{
  "query" : {
    "term" : { "status.keyword" : "operational" }
  }
}

----------------------------------

# does not work
# equivalent to "term" : { "vendor.keyword" : "sukhoi" }

GET /flies/fly/_search
{
    "query" : {
        "match" : { "vendor.keyword" : "sukhoi" }
    }
}

# works
# equivalent to "term" : { "vendor.keyword" : "Sukhoi" }

GET /flies/fly/_search
{
    "query" : {
        "match" : { "vendor.keyword" : "Sukhoi" }
    }
}

----------------------------------

# works
# documents have
	"vendor" : "Sukhoi"
	"vendor" : "Mikoyan-Gurevich"
# elastic stores terms
	"vendor" : "sukhoi"
	"vendor" : "mikoyan"
	"vendor" : "gurevich"
# match query takes "vendor" : "sukhoi", constructs temporary terms:
	"vendor" : "sukhoi"
# one of the values is present, it returns documents with "Sukhoi"

GET /flies/fly/_search
{
    "query" : {
        "match" : { "vendor" : "sukhoi" }
    }
}

# works
# documents have
	"vendor" : "Sukhoi"
	"vendor" : "Mikoyan-Gurevich"
# elastic stores terms
	"vendor" : "sukhoi"
	"vendor" : "mikoyan"
	"vendor" : "gurevich"
# match query takes "vendor" : "Sukhoi", constructs temporary terms:
	"vendor" : "sukhoi"
# one of the values is present, it returns documents with "Sukhoi"

GET /flies/fly/_search
{
    "query" : {
        "match" : { "vendor" : "Sukhoi" }
    }
}

----------------------------------

# works
# documents have
	"vendor" : "Sukhoi"
	"vendor" : "Mikoyan-Gurevich"
# elastic stores terms
	"vendor" : "sukhoi"
	"vendor" : "mikoyan"
	"vendor" : "gurevich"
# match query takes "vendor" : "sukhoi-gurevich", constructs temporary terms:
	"vendor" : "sukhoi"
	"vendor" : "gurevich"
# two values are present, it returns documents with "Sukhoi" and documents with "Mikoyan-Gurevich"

GET /flies/fly/_search
{
    "query" : {
        "match" : { "vendor" : "sukhoi-gurevich" }
    }
}

----------------------------------

# must is IF
# equivalent to filter, filter is in filter context, must is in query context
GET /flies/fly/_search
{
    "query": { 
      "bool": { 
        "must": [
          { "match": { "vendor" : "Sukhoi" }}
        ]
      }
    }
}

# must is AND
# equivalent to filter, filter is in filter context, must is in query context
GET /flies/fly/_search
{
    "query": { 
      "bool": { 
        "must": [
          { "match": { "vendor" : "Sukhoi" }}, 
          { "term": { "model" : "27" }}
        ]
      }
    }
}

----------------------------------

# must_not is IF NOT
# in filter context
GET /flies/fly/_search
{
    "query": { 
      "bool": { 
        "must_not": [
          { "match": { "vendor" : "Sukhoi" }}
        ]
      }
    }
}

# must_not is NAND
# in filter context
GET /flies/fly/_search
{
    "query": { 
      "bool": { 
        "must_not": [
          { "match": { "vendor" : "Sukhoi" }},
          { "match": { "country" : "UK" }}
        ]
      }
    }
}

----------------------------------

# should is IF
GET /flies/fly/_search
{
    "query": { 
      "bool": { 
        "should": [
          { "match": { "vendor" : "Grumman" }}
        ]
      }
    }
}

# should is OR
GET /flies/fly/_search
{
    "query": { 
      "bool": { 
        "should": [
          { "match": { "vendor" : "Sukhoi" }},
          { "match": { "vendor" : "Grumman" }}
        ]
      }
    }
}

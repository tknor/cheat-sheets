
docker images											// alias to docker image ls
docker build											// alias to docker image build
docker ps												// alias to docker container ls

docker image ls
docker image build -t <username>/<app> .
docker image rm

docker network ls
docker network connect <network> <container>

docker inspect <container>
docker logs <container>

docker exec -it <container> bash
docker exec -it <container> /bin/bash
docker exec -it <container> cat /etc/os-release
winpty docker exec -it <container> bash

docker cp file.txt <container>:/usr/home/file.txt		// before copying: sed -i 's/\r//' file.txt // line endings (win -> unix)

docker login --username=<user> --email=<email>

docker container ls
docker container ls -a
docker container ls -aq
docker rm -f $(docker container ls -aq)

docker tag bb38976d03cf <username>/<app>:firsttry

docker run -d --name <preferred_name> <image>:<version>						// detached, named
docker run -d --rm <image>:<version>										// with clean up ?
docker run -d -p 49160:3000 <image>:<version>								// port forwarding
docker run -d <image>:<version> --appendonly yes							// ?
docker run <registry>/<user>/<image>:<version>
docker run -d -e "XPACK1=value1" -e "XPACK2=value2" <image>:<version>		// set environmental variables

docker create											// part of docker run
docker start <container>								// part of docker run
docker stop <container>

docker-compose up
docker-compose up -d									// detached
docker-compose up -d --build							// clean builds containers
docker-compose -f <alt-docker-compose-file> up
docker-compose down
docker-compose create <container>						// part of docker-compose up
docker-compose start <container>						// part of docker-compose up
docker-compose nework create <network>
docker-compose nework create docker_default

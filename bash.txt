
#!/bin/bash													// header

. common.sh													// including other scripts

set -e														// immediate exit on error
set -u														// immediate exit on unset variable
set -x														// mirroring commands to stderr

echo "Hello"
echo 'Hello' > .gitignore									// write to file (overwrite)
echo 'Hello' >> .gitignore									// write to file (append)

find														// list folder structure
find . -not -path '*/\.*'									// structure without those starting with dot

printf "Hello\n"											// more consistent than echo, definitely supports newlines

VAR_MY="value_my"											// store value in variable
cd $VAR_PWD													// retrieve value from variable

VAR_PWD=$(pwd)												// store command result to variable
cd $VAR_PWD

$(($VAR_NUMBER - 1))										// arithmetic evaluation

echo $VAR_R

cp -r /source-folder /destination-folder					// recursive copy

mkdir -p src/main/resources/META-INF						// create folder with all the parents

rm file.txt
rm [file_prefix]*
rm -f file.txt												// forced - deletes write-protected file & silent when file does not exist
rm -rf folder												// delete folder recursively and forced

tail file.txt
tail -f file.txt
tail -1000 file.txt

[ -d "/path/dir/" ] && echo "exists"						// one line folder existence check

sudo lsof -i -P -n | grep LISTEN
sudo netstat -tulpn | grep LISTEN
sudo lsof -i:22 ## see a specific port such as 22 ##
sudo nmap -sTU -O IP-address-Here

read -p "press ENTER continue"
read -n 1 -s -r -p "press any key to continue"

chmod u=rwx,g=rwx,o=rwx file.txt							// permissions

wc -l file.txt												// number of lines in a file
wc -l < file.txt											// outputs only the number

yum install lsof											// installing lsof command

return <n>
exit <n>

sed -i 's/\r//' file.txt									// line endings (win -> unix)

curl localhost:8080
curl localhost:9200 | json_pp								// prettify JSON
curl -v localhost:8080										// ?

curl -o out.json -H "Content-Type: application/json" localhost:9200/_search
curl -d @in.json -o out.json -XPOST -H "Content-Type: application/json" localhost:9200/_search
curl -d @in.json -o out.json -XPUT -H "Content-Type: application/json" localhost:9200/_search
curl -d @in.json -o out.json -XDELETE -H "Content-Type: application/json" localhost:9200/_search

-------------------------------

// test for non-empty command's output

if [[ $(docker container ls -aq) ]]; then
    echo "there are containers"
else
    echo "there are no containers"
fi

-------------------------------

// test for folder existence

if [ -d "/folder" ]; then
    echo "exists"
else
    echo "does not exist"
fi

-------------------------------

// test for last command's success

if [[ $? != 0 ]]; then
    echo "last command failed"
else
    echo "last command succeeded"
fi

-------------------------------

// tests above combined

VAR_COMMAND=$(docker container ls -aq)
if [[ $? != 0 ]]; then
    echo "last command failed"
elif [[ $VAR_COMMAND ]]; then
    echo "last command succeeded, non-empty output"
else
    echo "last command succeeded, empty output"
fi

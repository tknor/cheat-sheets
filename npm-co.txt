
--------------------------------
unorganized
--------------------------------

npm i --save-dev @types/node

npm install -g typescript

npm install -g @angular/cli

yarn add ramda --save
yarn add @types/ramda --dev
	import * as R from 'ramda'

ng add @angular/pwa

ng add @angular/material

ng new <app_name> --create-application=false

ng generate library <my_lib_name>

ng --version

--------
npm
--------

npm init                                        // create package.json file
npm init -y
npm install                                     // installs modules listed in package.json, to local node_modules folder
npm install <module>                            // installs module to local node_modules folder
npm install -g <module>                         // ... not locally, but globally
npm install <module> --unsafe-perm              // easing security?
npm install --save <module>                     // installs module and saves it to package.json file
npm install --save --save-exact <module>        // ... stores exact version instead of version range
npm i                                           // alias for install
npm remove <module>

npm list                                        // show installed modules
npm list -g                                     // show path to and list of globally installed modules

------------------------
npm - usual modules
------------------------

npm install -g @angular/cli                     // ng
npm install -g firebase-tools
npm install --save-dev @angular-devkit/build-angular

npm install @types/node
npm install --save bitcom
npm install --save datapay
npm install --save bsv
npm install --save typescript
npm install --save bitbus
npm install --save bitbus --unsafe-perm
npm install --save googleapis@39
npm install --save request
npm install --save winston
npm install --save winston-daily-rotate-file
npm install --save xml2js
npm install --save dotenv
npm install --save mkdirp
npm install --save node-fetch

npm install --save firebase-functions@latest firebase-admin@latest

----------------
ng, angular
----------------

ng new <app_name>                               // creates folder, initializes angular application
ng new <app_name> --strict                      // no null

ng serve
ng serve --open

ng generate

ng build
ng build --prod

ng update

--------
npx
--------

npx license mit > LICENSE
npx gitignore node
npx covgen crimsondeed@gmail.com

--------
node
--------

node -v											// run node and see version

----------------------------------------------------------------
install nodejs with nvm :: https://github.com/nvm-sh/nvm
----------------------------------------------------------------

# download and run installation script

wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.3/install.sh | bash

# logout and login

# check successful installation

command -v nvm									# should output "nvm" if all is ok

nvm install 12.18.0								// install specific node version
nvm ls											// list locally installed versions
nvm ls-remote									// list available remote versions
nvm use 12.18.0									// switch to specific locally installed version
